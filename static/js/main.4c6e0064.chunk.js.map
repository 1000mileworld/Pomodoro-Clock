{"version":3,"sources":["functions.js","reducer.js","store.js","actions.js","SessionCounter.js","BreakCounter.js","Display.js","App.js","serviceWorker.js","index.js"],"names":["displayTimeLeft","seconds","minutes","Math","floor","remainderSeconds","convertNum","num","initialState","rootReducer","combineReducers","SessionReducer","state","session","action","type","BreakReducer","break","DisplayReducer","isPaused","label","TimerReducer","timeLeft","time","str","store","createStore","reducer","set_time","SessionCounter","increment","getState","props","inc_session","decrement","dec_session","id","onClick","this","React","Component","connect","dispatch","BreakCounter","inc_break","dec_break","countdown","Display","reset","clearInterval","reset_controls","reset_break","reset_session","reset_timer","audio","document","getElementById","pause","currentTime","controlTimer","runTimer","set_pause","secondsLeft","parseInt","timeStr","split","setInterval","console","log","update_counter","handleChange","a","play","set_type","breakTime","sessionTime","timeout","ms","Promise","res","setTimeout","className","icon","faPlay","faPause","faSync","src","body","style","backgroundColor","App","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c6e0064.chunk.js","sourcesContent":["export function displayTimeLeft(seconds) {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainderSeconds = seconds % 60;\r\n    const display = `${minutes < 10 ? '0' : '' }${minutes}:${remainderSeconds < 10 ? '0' : '' }${remainderSeconds}`;\r\n    return display;\r\n}\r\n\r\nexport function convertNum(num){\r\n    const prefix = num < 10 ? '0' : '';\r\n    return prefix + num + ':00';\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport {convertNum} from './functions';\r\n\r\nconst initialState = {\r\n    break: 5,\r\n    session: 25,\r\n    timeLeft: '25:00',\r\n    isPaused: true,\r\n    type: 'Session'\r\n  };\r\n  \r\nfunction SessionReducer(state = {session: initialState.session}, action){\r\n    switch(action.type){\r\n        case 'INC_SESSION':\r\n            return{\r\n                session: state.session+1,\r\n            };\r\n        case 'DEC_SESSION':\r\n            return{\r\n                session: state.session-1,\r\n            }\r\n        case 'RESET_SESSION':\r\n            return{\r\n                session: initialState.session,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction BreakReducer(state = {break: initialState.break}, action){\r\n    switch(action.type){\r\n        case 'INC_BREAK':\r\n            return{\r\n                break: state.break+1  \r\n            };\r\n        case 'DEC_BREAK':\r\n            return{\r\n                break: state.break-1\r\n            }\r\n        case 'RESET_BREAK':\r\n            return{\r\n                break: initialState.break\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction DisplayReducer(state = {isPaused: initialState.isPaused, type: initialState.type}, action){\r\n    switch(action.type){\r\n        case 'SET_PAUSE':\r\n            return{\r\n                isPaused: !state.isPaused,\r\n                type: state.type\r\n            }\r\n        case 'SET_TYPE':\r\n            return{\r\n                isPaused: state.isPaused,\r\n                type: action.label\r\n            }\r\n        case 'RESET_CONTROLS':\r\n            return{\r\n                isPaused: initialState.isPaused,\r\n                type: initialState.type\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction TimerReducer(state = {timeLeft: initialState.timeLeft}, action){\r\n    switch(action.type){\r\n        case 'SET_TIME':\r\n            return{\r\n                timeLeft: convertNum(action.time)\r\n            }\r\n        case 'UPDATE_COUNTER':\r\n            return{\r\n                timeLeft: action.str\r\n            }\r\n        case 'RESET_TIMER':\r\n            return{\r\n                timeLeft: initialState.timeLeft\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    SessionReducer,\r\n    BreakReducer,\r\n    DisplayReducer,\r\n    TimerReducer\r\n});\r\n\r\n  export default rootReducer;\r\n  ","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","export const INC_SESSION = \"INC_SESSION\";\r\nexport const DEC_SESSION = \"DEC_SESSION\";\r\nexport const INC_BREAK = \"INC_BREAK\";\r\nexport const DEC_BREAK = \"DEC_BREAK\";\r\n\r\nexport const SET_TIME = \"SET_TIME\";\r\nexport const UPDATE_COUNTER = \"UPDATE_COUNTER\";\r\nexport const SET_PAUSE = \"SET_PAUSE\";\r\nexport const SET_TYPE = \"SET_TYPE\";\r\nexport const RESET_CONTROLS = \"RESET_CONTROLS\";\r\nexport const RESET_BREAK = \"RESET_BREAK\";\r\nexport const RESET_SESSION = \"RESET_SESSION\";\r\nexport const RESET_TIMER = \"RESET_TIMER\";\r\n\r\n//action creators\r\nexport function inc_session(state){\r\n    return{\r\n        type: INC_SESSION\r\n    }   \r\n};\r\n\r\nexport function dec_session(){\r\n    return{\r\n        type: DEC_SESSION\r\n    }\r\n};\r\n\r\nexport const inc_break = () => ({type: INC_BREAK});\r\nexport const dec_break = () => ({type: DEC_BREAK});\r\n\r\nexport const set_time = (time) => ({\r\n    type: SET_TIME,\r\n    time\r\n});\r\n\r\nexport const update_counter = (str) => ({\r\n    type: UPDATE_COUNTER,\r\n    str\r\n})\r\n\r\nexport const set_pause = () => ({type: SET_PAUSE});\r\nexport const set_type = (label) => ({\r\n    type: SET_TYPE,\r\n    label\r\n});\r\nexport const reset_controls = () => ({type: RESET_CONTROLS});\r\nexport const reset_break = () => ({type: RESET_BREAK});\r\nexport const reset_session = () => ({type: RESET_SESSION});\r\nexport const reset_timer = () => ({type: RESET_TIMER});","import React from 'react';\r\nimport {inc_session, dec_session, set_time} from './actions';\r\nimport {connect} from 'react-redux';\r\nimport store from './store';\r\n\r\nclass SessionCounter extends React.Component{\r\n    increment = () => {\r\n        const state = store.getState();\r\n        //console.log(state.SessionReducer.timeLeft)\r\n        if(state.SessionReducer.session<60 && state.DisplayReducer.isPaused){\r\n            this.props.inc_session();\r\n            this.props.set_time(this.props.session+1);\r\n        }\r\n    }\r\n\r\n    decrement = () => {\r\n        const state = store.getState();\r\n        if(state.SessionReducer.session>1 && state.DisplayReducer.isPaused){\r\n            this.props.dec_session();\r\n            this.props.set_time(this.props.session-1);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button id=\"session-decrement\" onClick={this.decrement}>-</button>\r\n                <div id=\"session-length\">{this.props.session}</div>\r\n                <button id=\"session-increment\" onClick={this.increment}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        session: state.SessionReducer.session\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       inc_session: () => {dispatch(inc_session())},\r\n       dec_session: () => {dispatch(dec_session())},\r\n       set_time: (time) => {dispatch(set_time(time))}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionCounter);","import React from 'react';\r\nimport {inc_break, dec_break} from './actions';\r\nimport {connect} from 'react-redux';\r\nimport store from './store';\r\n\r\nclass BreakCounter extends React.Component{\r\n    increment = () => {\r\n        const state = store.getState();\r\n        if(state.BreakReducer.break<60){\r\n            this.props.inc_break();\r\n        }\r\n    }\r\n\r\n    decrement = () => {\r\n        const state = store.getState();\r\n        if(state.BreakReducer.break>1){\r\n            this.props.dec_break();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button id=\"break-decrement\" onClick={this.decrement}>-</button>\r\n                <div id=\"break-length\">{this.props.break}</div>\r\n                <button id=\"break-increment\" onClick={this.increment}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        break: state.BreakReducer.break\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n       inc_break: () => {dispatch(inc_break())},\r\n       dec_break: () => {dispatch(dec_break())}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BreakCounter);","import React from 'react';\r\nimport {set_pause, set_type, reset_controls, reset_break, reset_session, reset_timer, set_time, update_counter} from './actions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {displayTimeLeft} from './functions';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faPause, faSync } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlet countdown;\r\n\r\nclass Display extends React.Component{\r\n\r\n    reset = () => {\r\n        clearInterval(countdown);\r\n        this.props.reset_controls();\r\n        this.props.reset_break();\r\n        this.props.reset_session();\r\n        this.props.reset_timer();\r\n        const audio = document.getElementById('beep');\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n    }\r\n    controlTimer = () => {\r\n        if(this.props.isPaused){ //means was paused, now run timer\r\n            this.runTimer();\r\n        }else{\r\n            clearInterval(countdown);\r\n        }\r\n        this.props.set_pause(); //statement placement doesn't matter, prop needs time to update so can't use it immediately after dispatch\r\n    }\r\n    runTimer = () => {\r\n        // clear any existing timers\r\n        clearInterval(countdown); //possibly clearing the break timer before it's supposed to\r\n \r\n        let secondsLeft = parseInt(this.props.timeStr.split(\":\")[0])*60+parseInt(this.props.timeStr.split(\":\")[1]);\r\n        //console.log(\"time left before starting timer: \"+secondsLeft+\"s\")\r\n\r\n        countdown = setInterval(() => {\r\n\r\n            // if(secondsLeft===0){\r\n            //     console.log(\"timer reached zero, hit inside setInterval()\")\r\n            // }\r\n            secondsLeft = secondsLeft - 1;\r\n\r\n            // check if we should stop it!\r\n            if(secondsLeft < 0) {\r\n                console.log(\"stopped timer because it reached zero\")\r\n                clearInterval(countdown);\r\n                return;\r\n            }\r\n            this.props.update_counter(displayTimeLeft(secondsLeft)); //note: cannot assign to prop as it's read only\r\n            //console.log(this.props.timeStr)\r\n        }, 1000);\r\n        //console.log(\"finished timer\")\r\n    }\r\n    handleChange = async () => {\r\n        if(this.props.timeStr==='00:00'){\r\n            const audio = document.getElementById('beep');\r\n            audio.play();\r\n            \r\n            //console.log(\"about to change type\")\r\n            //setTimeout(()=>{ //need to delay 1 second to pass test\r\n                if(this.props.type==='Session'){ \r\n                    //console.log(\"changed to break\")\r\n                    this.props.set_type('Break');\r\n                    this.props.set_time(this.props.breakTime);\r\n                }else{\r\n                    //console.log(\"changed to session\")\r\n                    this.props.set_type('Session')\r\n                    this.props.set_time(this.props.sessionTime);\r\n                }\r\n                await this.timeout(100);\r\n                //console.log(\"start timer upon changing type\")\r\n                this.runTimer();\r\n            //}, 1000)\r\n\r\n        }\r\n    }\r\n    timeout = (ms) => {\r\n        return new Promise(res => setTimeout(res,ms));\r\n    }\r\n    componentDidUpdate() {\r\n        this.handleChange();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2 id=\"timer-label\">{this.props.type}</h2>\r\n                <div id=\"time-left\">{this.props.timeStr}</div>\r\n                <button id=\"start_stop\" onClick={this.controlTimer}>\r\n                    <FontAwesomeIcon className=\"fa-2x\" icon={faPlay}/>\r\n                    <FontAwesomeIcon className=\"fa-2x\" icon={faPause}/>\r\n                </button>\r\n                <button id=\"reset\" onClick={this.reset}><FontAwesomeIcon className=\"fa-2x\" icon={faSync}/></button>\r\n                <audio id=\"beep\" src=\"https://goo.gl/65cBl1\"></audio>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        isPaused: state.DisplayReducer.isPaused,\r\n        type: state.DisplayReducer.type,\r\n        sessionTime: state.SessionReducer.session,\r\n        breakTime: state.BreakReducer.break,\r\n        timeStr: state.TimerReducer.timeLeft\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        set_pause: () => {dispatch(set_pause())},\r\n        set_type: (label) => {dispatch(set_type(label))},\r\n        reset_controls: () => {dispatch(reset_controls())},\r\n        reset_break: () => {dispatch(reset_break())},\r\n        reset_session: () => {dispatch(reset_session())},\r\n        reset_timer: () => {dispatch(reset_timer())},\r\n        set_time: (time) => {dispatch(set_time(time))},\r\n        update_counter: (str) => {dispatch(update_counter(str))}\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {Provider} from 'react-redux';\r\n\r\nimport store from './store';\r\nimport SessionCounter from './SessionCounter.js';\r\nimport BreakCounter from './BreakCounter';\r\nimport Display from './Display';\r\n\r\n\r\n//css\r\ndocument.body.style.backgroundColor = \"hsl(60, 100%, 90%)\";\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    return(\r\n      <Provider store={store}>\r\n        <div className=\"container-fluid\">\r\n          <link href=\"https://fonts.googleapis.com/css?family=Orbitron&display=swap\" rel=\"stylesheet\"/>\r\n          <link href=\"https://fonts.googleapis.com/css?family=Zhi+Mang+Xing&display=swap\" rel=\"stylesheet\"/>\r\n          <link href=\"https://fonts.googleapis.com/css?family=Barlow&display=swap\" rel=\"stylesheet\"/>\r\n          <link href=\"https://fonts.googleapis.com/css?family=Exo+2&display=swap\" rel=\"stylesheet\"/>\r\n\r\n          <h1>Pomodoro Clock</h1>\r\n          <div className=\"row\">\r\n            <h2 id='break-label' className=\"col\">Break Length</h2>\r\n            <h2 id='session-label' className=\"col\">Session Length</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n            <div><BreakCounter/></div>           \r\n            </div>\r\n            <div className=\"col\">\r\n            <div><SessionCounter/></div>           \r\n            </div>\r\n          </div>\r\n          <Display/>\r\n          <p id=\"footer\">Designed and coded by Joe Liang.</p>\r\n        </div>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}